{"version":3,"sources":["assets/images/background.svg","assets/images/Logo.svg","styles/global.js","components/Header/styles.js","components/Header/index.js","util/format.js","services/api.js","store/modules/cart/actions.js","pages/Home/styles.js","pages/Home/index.js","pages/Cart/styles.js","pages/Cart/index.js","routes.js","services/history.js","store/modules/rootReducer.js","store/modules/cart/reducer.js","store/modules/cart/sagas.js","store/modules/rootSaga.js","store/index.js","App.js","index.js"],"names":["module","exports","createGlobalStyle","background","Container","styled","header","Cart","Link","connect","state","cartSize","cart","length","to","src","logo","alt","size","color","formatPrice","Intl","NumberFormat","style","currency","format","api","axios","create","baseURL","addToCartRequest","id","type","addToCartSuccess","product","removeFromCart","updateAmountRequest","amount","updateAmountSuccess","ProductList","ul","darken","Home","products","handleAddProduct","props","get","response","data","map","priceFormatted","price","this","setState","key","image","title","onClick","Component","reduce","dispatch","bindActionCreators","CartActions","div","ProductTable","table","Total","subtotal","total","decrement","readOnly","value","increment","Routes","path","exact","component","history","createBrowserHistory","combineReducers","action","produce","draft","push","productIndex","findIndex","p","splice","Number","addToCart","updateAmount","select","find","productExists","call","stock","stockAmount","currentAmount","toast","error","put","all","takeLatest","rootSaga","sagaMiddleware","createSagaMiddleware","enhancer","applyMiddleware","store","createStore","rootReducer","run","App","autoClose","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.20507b95.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/background.38ea808a.svg\";","module.exports = __webpack_public_path__ + \"static/media/Logo.38a4d24b.svg\";","import { createGlobalStyle } from 'styled-components'\n\nimport 'react-toastify/dist/ReactToastify.css'\nimport background from '../assets/images/background.svg'\n\nexport default createGlobalStyle`\n  @import url('https://fonts.googleapis.com/css?family=Roboto&display=swap');\n\n  * {\n    margin: 0;\n    padding: 0;\n    outline: 0;\n    box-sizing: border-box;\n  }\n\n  body {\n    background: #191920 url(${background}) no-repeat center top;\n    -webkit-font-smoothing: antialiased;\n  }\n\n  body, input, button {\n    font: 14px Roboto, sans-serif;\n  }\n\n  #root {\n    max-width: 1020px;\n    margin: 0 auto;\n    padding: 0 20px 50px;\n  }\n\n  button {\n    cursor: pointer;\n  }\n`\n","import styled from 'styled-components'\nimport { Link } from 'react-router-dom'\n\n\nexport const Container = styled.header`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin: 50px 0;\n`\n\nexport const Cart = styled(Link)`\n  display: flex;\n  align-items: center;\n  text-decoration: none;\n  transition: opacity 0.2s;\n\n  &:hover {\n    opacity: 0.7;\n  }\n\n  div {\n    text-align: right;\n    margin-right: 10px;\n\n    strong {\n      display: block;\n      color: #fff;\n    }\n\n    span {\n      font-size: 12px;\n      color: #999;\n    }\n  }\n`\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { connect } from 'react-redux'\n\nimport { MdShoppingBasket } from 'react-icons/md'\n\nimport { Container, Cart } from './styles'\n\nimport logo from '../../assets/images/Logo.svg'\n\nfunction Header({ cartSize }) {\n  return (\n    <Container>\n      <Link to=\"/\">\n        <img src={logo} alt=\"Rocketshoes\" />\n      </Link>\n\n      <Cart to=\"/cart\">\n        <div>\n          <strong>Meu carrinho</strong>\n          <span>{cartSize} itens</span>\n        </div>\n        <MdShoppingBasket size={36} color=\"#FFF\" />\n      </Cart>\n    </Container>\n  )\n}\n\nexport default connect(state => ({\n  cartSize: state.cart.length,\n}))(Header)\n","export const { format: formatPrice } = new Intl.NumberFormat('pt-BR', {\n  style: 'currency',\n  currency: 'BRL',\n})\n","import axios from 'axios'\n\nconst api = axios.create({\n  baseURL: 'http://localhost:3333',\n})\n\nexport default api\n","export function addToCartRequest(id) {\n  return {\n    type: '@cart/ADD_REQUEST',\n    id,\n  }\n}\n\nexport function addToCartSuccess(product) {\n  return {\n    type: '@cart/ADD_SUCCESS',\n    product,\n  }\n}\n\nexport function removeFromCart(id) {\n  return {\n    type: '@cart/REMOVE',\n    id,\n  }\n}\n\nexport function updateAmountRequest(id, amount) {\n  return {\n    type: '@cart/UPDATE_AMOUNT_REQUEST',\n    id,\n    amount,\n  }\n}\n\nexport function updateAmountSuccess(id, amount) {\n  return {\n    type: '@cart/UPDATE_AMOUNT_SUCCESS',\n    id,\n    amount,\n  }\n}\n","import styled from 'styled-components'\nimport { darken } from 'polished'\n\nexport const ProductList = styled.ul`\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  grid-gap: 20px;\n  list-style: none;\n\n  li {\n    display: flex;\n    flex-direction: column;\n    background: #fff;\n    border-radius: 4px;\n    padding: 20px;\n\n    img {\n      align-self: center;\n      max-width: 250px;\n    }\n\n    > strong {\n      font-size: 16px;\n      line-height: 20px;\n      color: #333;\n      margin-top: 5px\n    }\n\n    > span {\n      font-size: 21px;\n      font-weight: bold;\n      margin: 5px 0 20px;\n    }\n\n    button {\n      background: #7159c1;\n      color: #fff;\n      border: 0;\n      border-radius: 4px;\n      overflow: hidden;\n      margin-top: auto;\n\n      display: flex;\n      align-items: center;\n      transition: background 0.2s;\n\n      &:hover {\n        background: ${darken(0.03, '#7159c1')};\n      }\n\n      div {\n        display: flex;\n        align-items: center;\n        padding: 12px;\n        background: rgba(0, 0, 0, 0.1);\n\n        svg {\n          margin-right: 5px;\n        }\n      }\n\n      span {\n        flex: 1;\n        text-align: center;\n        font-weight: bold;\n      }\n    }\n  }\n`\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport { MdAddShoppingCart } from 'react-icons/md'\nimport { formatPrice } from '../../util/format'\nimport api from '../../services/api'\n\nimport * as CartActions from '../../store/modules/cart/actions'\n\nimport { ProductList } from './styles'\n\nclass Home extends Component {\n  state = {\n    products: [],\n  }\n\n  async componentDidMount() {\n    const response = await api.get('products')\n\n    const data = response.data.map(product => ({\n      ...product,\n      priceFormatted: formatPrice(product.price),\n    }))\n\n    this.setState({ products: data })\n  }\n\n  handleAddProduct = id => {\n    const { addToCartRequest } = this.props\n\n    addToCartRequest(id)\n  }\n\n  render() {\n    const { products } = this.state\n    const { amount } = this.props\n\n    return (\n      <ProductList>\n        {products.map(product => (\n          <li key={product.id}>\n            <img src={product.image} alt={product.title} />\n            <strong>{product.title}</strong>\n            <span>{product.priceFormatted}</span>\n\n            <button type=\"button\" onClick={() => this.handleAddProduct(product.id)}>\n              <div>\n                <MdAddShoppingCart size={16} color=\"#FFF\" /> {amount[product.id] || 0}\n              </div>\n\n              <span>ADICIONAR AO CARRINHO</span>\n            </button>\n          </li>\n        ))}\n      </ProductList>\n    )\n  }\n}\n\nconst mapStateToProps = state => ({\n  amount: state.cart.reduce((amount, product) => {\n    amount[product.id] = product.amount\n\n    return amount\n  }, {}),\n})\n\nconst mapDispatchToProps = dispatch =>\n  bindActionCreators(CartActions, dispatch)\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Home)\n","import styled from 'styled-components'\nimport { darken } from 'polished'\n\nexport const Container = styled.div`\n  padding: 30px;\n  background: #fff;\n  border-radius: 4px;\n\n  footer {\n    margin-top: 30px;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n\n    button {\n      background: #7159c1;\n      color: #fff;\n      border: 0;\n      border-radius: 4px;\n      padding: 12px 20px;\n      font-weight: bold;\n      text-transform: uppercase;\n      transition: background 0.2s;\n\n      &:hover {\n        background: ${darken(0.03, '#7159c1')}\n      }\n    }\n  }\n`\n\nexport const ProductTable = styled.table`\n  width: 100%;\n\n  thead th {\n    color: #999;\n    text-align: left;\n    padding: 12px;\n  }\n\n  tbody td {\n    padding: 12px;\n    border-bottom: 1px solid #eee;\n  }\n\n  img {\n    height: 100px;\n  }\n\n  strong {\n    color: #333;\n    display: block;\n  }\n\n  span {\n    display: block;\n    margin-top: 5px;\n    font-size: 18px;\n    font-weight: bold;\n  }\n\n  div {\n    display: flex;\n    align-items: center;\n\n    input {\n      border: 1px solid #ddd;\n      border-radius: 4px;\n      color: #666;\n      padding: 6px;\n      width: 50px;\n    }\n  }\n\n  button {\n    background: none;\n    border: 0;\n    padding: 6px;\n  }\n`\n\nexport const Total = styled.div`\n  display: flex;\n  align-items: baseline;\n\n  span {\n    color: #999;\n    font-weight: bold;\n  }\n\n  strong {\n    font-size: 28px;\n    margin-left: 5px;\n  }\n`\n","import React from 'react'\nimport { MdRemoveCircleOutline, MdAddCircleOutline, MdDelete } from 'react-icons/md'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\n\nimport { formatPrice } from '../../util/format'\n\nimport * as CartActions from '../../store/modules/cart/actions'\n\nimport { Container, ProductTable, Total } from './styles'\n\nfunction Cart({ cart, total, removeFromCart, updateAmountRequest }) {\n  function increment(product) {\n    updateAmountRequest(product.id, product.amount + 1)\n  }\n\n  function decrement(product) {\n    updateAmountRequest(product.id, product.amount - 1)\n  }\n\n  return (\n    <Container>\n      <ProductTable>\n        <thead>\n          <tr>\n            <th />\n            <th>PRODUTO</th>\n            <th>QTD</th>\n            <th>SUBTOTAL</th>\n            <th />\n          </tr>\n        </thead>\n        <tbody>\n          {cart.map(product => (\n            <tr>\n              <td>\n                <img src={product.image} alt={product.title} />\n              </td>\n              <td>\n                <strong>{product.title}</strong>\n                <span>{product.priceFormatted}</span>\n              </td>\n              <td>\n                <div>\n                  <button type=\"button\" onClick={() => decrement(product)}>\n                    <MdRemoveCircleOutline size={20} color=\"#7159c1\" />\n                  </button>\n                  <input type=\"number\" readOnly value={product.amount} />\n                  <button type=\"button\" onClick={() => increment(product)}>\n                    <MdAddCircleOutline size={20} color=\"#7159c1\" />\n                  </button>\n                </div>\n              </td>\n              <td>\n                <strong>{product.subtotal}</strong>\n              </td>\n              <td>\n                <button type=\"button\" onClick={() => removeFromCart(product.id)}>\n                  <MdDelete size={20} color=\"#7159c1\" />\n                </button>\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </ProductTable>\n\n      <footer>\n        <button type=\"button\">Finalizar pedido</button>\n\n        <Total>\n          <span>TOTAL</span>\n          <strong>{total}</strong>\n        </Total>\n      </footer>\n    </Container>\n  )\n}\n\nconst mapStateToProps = state => ({\n  cart: state.cart.map(product => ({\n    ...product,\n    subtotal: formatPrice(product.price * product.amount),\n  })),\n  total: formatPrice(state.cart.reduce((total, product) => {\n    return total + product.price * product.amount\n  }, 0)),\n})\n\nconst mapDispatchToProps = dispatch =>\n  bindActionCreators(CartActions, dispatch)\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Cart)\n","import React from 'react'\nimport { Switch, Route } from 'react-router-dom'\n\nimport Home from './pages/Home'\nimport Cart from './pages/Cart'\n\nexport default function Routes() {\n  return (\n    <Switch>\n      <Route path=\"/\" exact component={Home} />\n      <Route path=\"/cart\" component={Cart} />\n    </Switch>\n  )\n}\n\n","import { createBrowserHistory } from 'history'\n\nconst history = createBrowserHistory()\n\nexport default history\n","import { combineReducers } from 'redux'\n\nimport cart from './cart/reducer'\n\nexport default combineReducers({\n  cart,\n})\n","import produce from 'immer'\n\nexport default function cart(state = [], action) {\n  switch (action.type) {\n    case '@cart/ADD_SUCCESS':\n      return produce(state, draft => {\n        const { product } = action\n\n        draft.push(product)\n      })\n    case '@cart/REMOVE':\n      return produce(state, draft => {\n        const productIndex = draft.findIndex(p => p.id === action.id)\n\n        if (productIndex >= 0) {\n          draft.splice(productIndex, 1)\n        }\n      })\n    case '@cart/UPDATE_AMOUNT_SUCCESS': {\n      return produce(state, draft => {\n        const productIndex = draft.findIndex(p => p.id === action.id)\n\n        if (productIndex >= 0) {\n          draft[productIndex].amount = Number(action.amount)\n        }\n      })\n    }\n    default:\n      return state\n  }\n}\n","import { call, select, put, all, takeLatest } from 'redux-saga/effects'\nimport { toast } from 'react-toastify'\n\nimport api from '../../../services/api'\nimport history from '../../../services/history'\nimport { formatPrice } from '../../../util/format'\n\nimport { addToCartSuccess, updateAmountSuccess } from './actions'\n\nfunction* addToCart({ id }) {\n  const productExists = yield select (\n    state => state.cart.find(p => p.id === id),\n  )\n\n  const stock = yield call(api.get, `/stock/${id}`)\n\n  const stockAmount = stock.data.amount\n  const currentAmount = productExists ? productExists.amount : 0\n\n  const amount = currentAmount + 1\n\n  if (amount > stockAmount) {\n    toast.error('Quantidade solicitada fora de estoque')\n    return\n  }\n\n  if (productExists) {\n    yield put (updateAmountSuccess(id, amount))\n  } else {\n    const response = yield call (api.get, `/products/${id}`)\n\n    const data = {\n      ...response.data,\n      amount: 1,\n      priceFormatted: formatPrice(response.data.price),\n    }\n\n    yield put(addToCartSuccess(data))\n\n    history.push('/cart')\n  }\n}\n\nfunction* updateAmount({ id, amount }) {\n  if (amount <= 0) return\n\n  const stock = yield call(api.get, `stock/${id}`)\n  const stockAmount = stock.data.amount\n\n  if (amount > stockAmount) {\n    toast.error('Quantidade solicitada fora de estoque')\n    return\n  }\n\n  yield put(updateAmountSuccess(id, amount))\n}\n\nexport default all([\n  takeLatest('@cart/ADD_REQUEST', addToCart),\n  takeLatest('@cart/UPDATE_AMOUNT_REQUEST', updateAmount),\n])\n","import { all } from 'redux-saga/effects'\n\nimport cart from './cart/sagas'\n\nexport default function* rootSaga() {\n  return yield all([cart])\n}\n","import { createStore, applyMiddleware } from 'redux'\nimport createSagaMiddleware from 'redux-saga'\n\nimport rootReducer from './modules/rootReducer'\nimport rootSaga from './modules/rootSaga'\n\nconst sagaMiddleware = createSagaMiddleware()\n\nconst enhancer = applyMiddleware(sagaMiddleware)\n\nconst store = createStore(rootReducer, enhancer)\n\nsagaMiddleware.run(rootSaga)\n\nexport default store\n","import React from 'react'\nimport { Router } from 'react-router-dom'\nimport { Provider } from 'react-redux'\nimport { ToastContainer } from 'react-toastify'\n\nimport GlobalStyle from './styles/global'\nimport Header from './components/Header'\nimport Routes from './routes'\n\nimport history from './services/history'\nimport store from './store'\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <Router history={history}>\n        <Header />\n        <Routes />\n        <GlobalStyle />\n        <ToastContainer autoClose={3000} />\n      </Router>\n    </Provider>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}